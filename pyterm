#!/usr/bin/env python3
import sys
import os
import serial.tools.list_ports

"""
Usage: pyterm [device]
Calls picocom on "device". If device is not given, looks for Micropython or openMV 
devices and pick the first one (but prints all devices found).
"""
def main():
  if len(sys.argv) > 1:
    pyports = [serial.tools.list_ports_common.ListPortInfo()]
    pyports[0].device = sys.argv[1]
  else:
    ports = serial.tools.list_ports.comports()
    pyports = []
    for p in ports :
      if p.manufacturer in ['Micro Python', 'MicroPython', 'OpenMV', 'Silicon Labs'] \
      or 'USB to UART' in p.description \
      or 'BBC micro:bit' in p.description :
        pyports.append(p)
    if len(pyports) == 0 :
      print("No MicroPython device found")
      for p in ports :
        print("  " + p.device
            + " - " + (p.manufacturer if p.manufacturer is not None
                                      else "No manufacturer")
            + " / "
            + (p.description if p.description is not None
                             else "No description")
        )
      sys.exit(1)
    if len(pyports) > 1 :
      print("MicroPython devices found:")
      for p in pyports :
        print("  " + p.device + " - " + p.description)
# os.system('minicom -D '+pyports[0].device)
  if (pyports[0].manufacturer is None) :
    print("Connecting to "+pyports[0].device)
  else :
    print("Connecting to "+pyports[0].device+" ("+pyports[0].manufacturer+")")
  os.system('picocom '+pyports[0].device+' -b115200')

if __name__ == "__main__":
    main()
